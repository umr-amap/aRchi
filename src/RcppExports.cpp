// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cpp_build_skeleton
DataFrame cpp_build_skeleton(DataFrame data, double max_d);
RcppExport SEXP _aRchi_cpp_build_skeleton(SEXP dataSEXP, SEXP max_dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type max_d(max_dSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_build_skeleton(data, max_d));
    return rcpp_result_gen;
END_RCPP
}
// cpp_compute_layers
DataFrame cpp_compute_layers(NumericMatrix coords, double D);
RcppExport SEXP _aRchi_cpp_compute_layers(SEXP coordsSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< double >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_compute_layers(coords, D));
    return rcpp_result_gen;
END_RCPP
}
// cpp_compute_topology
DataFrame cpp_compute_topology(DataFrame skel);
RcppExport SEXP _aRchi_cpp_compute_topology(SEXP skelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type skel(skelSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_compute_topology(skel));
    return rcpp_result_gen;
END_RCPP
}
// cpp_smooth_skeleton
List cpp_smooth_skeleton(DataFrame qsm, int niter, double th);
RcppExport SEXP _aRchi_cpp_smooth_skeleton(SEXP qsmSEXP, SEXP niterSEXP, SEXP thSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type qsm(qsmSEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< double >::type th(thSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_smooth_skeleton(qsm, niter, th));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_aRchi_cpp_build_skeleton", (DL_FUNC) &_aRchi_cpp_build_skeleton, 2},
    {"_aRchi_cpp_compute_layers", (DL_FUNC) &_aRchi_cpp_compute_layers, 2},
    {"_aRchi_cpp_compute_topology", (DL_FUNC) &_aRchi_cpp_compute_topology, 1},
    {"_aRchi_cpp_smooth_skeleton", (DL_FUNC) &_aRchi_cpp_smooth_skeleton, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_aRchi(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
